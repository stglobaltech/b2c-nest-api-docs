{
	"info": {
		"_postman_id": "85fb9097-3df7-481f-944c-c432d8685f80",
		"name": "tmt-nestjs-user",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Send Otp [GQL]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d652e2d8-c6a4-4617-8b39-5fd85314646d",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Success validation\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.environment.set(\"otp\",jsonData.data.sendOtp.otp);\r",
							"    pm.expect(jsonData.data.sendOtp.success).to.eql(true);\r",
							"\r",
							"    console.log(\"Otp = \", jsonData.data.sendOtp.otp);\r",
							"    console.log(\"countryCode = \", pm.variables.get('countryCode'));\r",
							"    console.log(\"mobileNo = \", pm.variables.get('mobileNo'));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "42837a6f-4134-4a83-9584-81d04aed11f3",
						"exec": [
							"//pm.variables.set(\"countryCode\",\"IND\");\r",
							"//pm.variables.set(\"mobileNo\",\"500012350\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query SendOtp($sendOtpInputDto: SendOtpInputDto!){\n  sendOtp(sendOtpInputDto:$sendOtpInputDto) {\n    success\n    message {\n      en\n      ar\n    }\n    otp\n  }\n}",
						"variables": "{\n  \"sendOtpInputDto\": {\n    \"countryCode\": \"{{countryCode}}\",\n    \"mobile\": \"{{mobileNo}}\"\n  }\n}"
					},
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{auth-server-gql}}",
					"host": [
						"{{auth-server-gql}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User Signup [GQL]",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "bd3d9c11-97bb-437b-bf08-98453820c77a",
						"exec": [
							"var email = \"auto+{{$randomInt}}@tmmt.com\"\r",
							"pm.variables.set(\"email\",email);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2013f613-524d-4431-bb5a-fcac432a6809",
						"exec": [
							"var json = pm.response.json();\r",
							"pm.test(\"Verify User Signup\", function(){\r",
							"    pm.expect(json.data.userSignup.success).to.be.true;\r",
							"    var email = pm.variables.get('email');\r",
							"    console.log(\"User Email, \",email);\r",
							"    pm.environment.set(\"uEmail\",email);\r",
							"\r",
							"    pm.environment.set(\"token\",json.data.userSignup.accessToken);\r",
							"    pm.environment.set(\"refreshToken\", json.data.userSignup.refreshToken);\r",
							"    console.log(\"token = \", pm.environment.get(\"token\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation UserSignup($userSignupInputDto: UserSignupInputDto!) {\n  userSignup(userSignupInputDto: $userSignupInputDto) {\n    success\n     message {\n      en\n      ar\n    }\n    accessToken\n    refreshToken\n  }\n}\n",
						"variables": "{\n  \"userSignupInputDto\": {\n     \"name\": \"Auto+{{$randomInt}}\",\n\t\t\"countryCode\": \"{{countryCode}}\",\n\t\t\"mobile\": \"{{mobileNo}}\",\n\t\t\"email\": \"{{email}}\",\n\t\t\"deviceId\": \"12344555\",\n\t\t\"deviceType\": \"IOS\",\n\t\t\"osVersion\": \"1.0.1\",\n\t\t\"deviceModel\": \"String\",\n\t\t\"versionCode\": \"String\",\n\t\t\"otp\": \"{{otp}}\",\n\t\t\"deviceARN\": \"String\",\n\t\t\"oneSignalId\": \"String\"\n  }\n}"
					},
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{auth-server-gql}}",
					"host": [
						"{{auth-server-gql}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User Login [GQL]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8fd0c557-4644-4b9a-b8f8-91e608e02ba5",
						"exec": [
							"var json = pm.response.json();\r",
							"\r",
							"pm.test(\"Verify User Login\",function(){\r",
							"    pm.expect(pm.response.to.have.status(200));\r",
							"    console.log(\"Api response = \",json.data.userLogin.success);\r",
							"    //pm.expect(json.data.userLogin.success).to.be.true;\r",
							"    if(json.data.userLogin.success == true) {\r",
							"        pm.environment.set(\"token\",json.data.userLogin.accessToken);\r",
							"        pm.environment.set(\"refreshToken\", json.data.userLogin.refreshToken);\r",
							"    }\r",
							"    console.log(\"token = \", pm.environment.get(\"token\"));    \r",
							"});\r",
							"\r",
							"pm.test(\"isSignupRequired true run Signup\", function(){\r",
							"    pm.expect(json.data.userLogin.isSignUpRequired).to.be.true\r",
							"   if((json.data.userLogin.isSignUpRequired) == true)\r",
							"        postman.setNextRequest(\"User Signup\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation  UserLogin($userLoginInputDto: UserLoginInputDto!){\n  userLogin(userLoginInputDto: $userLoginInputDto) {\n    success\n     message {\n      en\n      ar\n    }\n    accessToken\n    refreshToken\n    isSignUpRequired\n  }\n}",
						"variables": "{\n  \"userLoginInputDto\": {\n    \"countryCode\": \"{{countryCode}}\",\n    \"mobile\": \"{{mobileNo}}\",\n    \"deviceType\": \"IOS\",\n    \"otp\": \"{{otp}}\"\n  }\n}"
					},
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{auth-server-gql}}",
					"host": [
						"{{auth-server-gql}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Access token [GQL]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "33c0019c-13bd-4647-9118-dce88d7d114c",
						"exec": [
							"var json = pm.response.json();\r",
							"pm.test(\"New Access Token\",function(){\r",
							"    pm.expect(pm.response.to.have.status(200));\r",
							"    console.log(\"Api response = \",json.data.refreshToken.success);\r",
							"    pm.expect(json.data.refreshToken.success).to.be.true;\r",
							"    pm.environment.set(\"token\",json.data.refreshToken.accessToken);\r",
							"    console.log(\"token = \", pm.environment.get(\"token\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{refreshToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation RefreshToken($accessTokenInputDto: BuildAccessTokenInputDto!){\n  refreshToken(accessTokenInputDto:$accessTokenInputDto){\n    accessToken\n  }\n}",
						"variables": "{\n  \"accessTokenInputDto\": {\n    \"accessToken\": \"{{token}}\"\n  }\n}"
					},
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{auth-server-gql}}",
					"host": [
						"{{auth-server-gql}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User Profile [GQL]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "57950951-4364-435f-914f-5b0f90cd0ef4",
						"exec": [
							"var json = pm.response.json();\r",
							"pm.test(\"Verify User Profile\",function(){\r",
							"    pm.expect(pm.response.to.have.status(200));\r",
							"    pm.expect(json.data.getUserProfile.mobile).to.eql(pm.variables.get('mobileNo'));\r",
							"    pm.expect(json.data.getUserProfile.countryCode).to.eql(pm.variables.get('countryCode'));\r",
							"    //pm.expect(json.data.getUserProfile.email).to.eql(pm.environment.get('uEmail'));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query GetUserProfile{\n  getUserProfile {\n      mobile\n      email\n      name\n    countryCode\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{main-server-gql}}",
					"host": [
						"{{main-server-gql}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Access Token [Rest API]",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{refresh-token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"accessToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjY4NmY1N2Y4N2Q4MjBmOGY0MTU4YzUiLCJzZXNzaW9uSWQiOiI1ZjY4NmY1NzMwZTRkZjEyZmIzNDFhMGUiLCJhcHBUeXBlIjoiVVNFUiIsImRldmljZVR5cGUiOiJJT1MiLCJyb2xlcyI6WyJVU0VSIl0sImlhdCI6MTYwMDY3OTc2NywiZXhwIjoxNjAwNjgwNjY3fQ.MEQCIGof84Lkzj6RsORH7f-gsOhz-S9VN2iapFmmGMjaVfcPAiAQqJeEZ4lah-3FlXBhT8OFpC8BGkZB1cvcmLVvAi5Q4Q\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{auth-server}}/tokens/refresh",
					"host": [
						"{{auth-server}}"
					],
					"path": [
						"tokens",
						"refresh"
					]
				}
			},
			"response": []
		},
		{
			"name": "Save Address [GQL]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c40b4cf5-b209-49a9-bba6-2277b9cafa85",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    const variable = pm.response.json();\r",
							"    pm.environment.set(\"addressId\", variable.data.saveAddress.id);\r",
							"});\r",
							"pm.test(\"Response time validation\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation saveAddress($input: AddressInputDto!) {\n  saveAddress(addressInput: $input){\n    id\n    name\n    address\n    buildingNo\n    imageUrl\n    location {\n      coordinates\n      type\n    }\n  }\n}",
						"variables": "{\n  \"input\": {\n    \"name\": \"{{addrName}}\",\n    \"address\": \"first street, chennai\",\n    \"buildingNo\": \"19\",\n    \"imageUrl\": \"http://google.com\",\n    \"location\": {\n      \"coordinates\": [12.96738173,80.15095264],\n      \"type\": \"point\"\n    }\n  }\n}"
					}
				},
				"url": {
					"raw": "{{main-server-gql}}",
					"host": [
						"{{main-server-gql}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Address [GQL]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2fcd1677-a4ef-4c64-af04-87e6cab6b12f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.deleteAddress.status).to.eql(\"SUCCESS\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation DeleteAddress($input: AddressDeleteInputDto!) {\n  deleteAddress(addressDeleteInput:$input) {\n    status\n  }\n}",
						"variables": "{\n  \"input\": {\n    \"addressId\": \"{{addressId}}\"\n  }\n}"
					}
				},
				"url": {
					"raw": "{{main-server-gql}}",
					"host": [
						"{{main-server-gql}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Address [GQL]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cf46ce31-9f23-46f4-b107-a3d5931dc64f",
						"exec": [
							"/*\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var response = pm.response.json();\r",
							"    pm.environment.set(\"addressId\", response.data.getAllAddress[0].id);\r",
							"});\r",
							"*/\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query GetAllAddress {\n  getAllAddress {\n    id\n    name\n    address\n    buildingNo\n    imageUrl\n    location {\n      coordinates\n      type\n    }\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{main-server-gql}}",
					"host": [
						"{{main-server-gql}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e3df3022-73b7-4204-8e6f-2a9c8d529ab4",
				"type": "text/javascript",
				"exec": [
					"pm.variables.set(\"countryCode\",\"IND\");",
					"pm.variables.set(\"mobileNo\",\"500012350\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "4b372b3f-3ca1-4cfb-92ea-3a43b3737725",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}