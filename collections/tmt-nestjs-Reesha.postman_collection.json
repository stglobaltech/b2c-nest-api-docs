{
	"info": {
		"_postman_id": "23b5aa30-8c5f-4a4f-8bd1-d3df5cb1c1eb",
		"name": "tmt-nestjs-Reesha",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Reesha GQL [GQL]",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation ReeshaSignup($input: ReeshaSignupInputDto!){\n  reeshaSignup(input:$input) {\n    success\n    message {\n      en\n    }\n  }\n}",
								"variables": "{\n  \"input\": {\n    \"username\":\"ReeshaUser1\",\n    \"email\":\"user@reesha.com\",\n    \"password\":\"pass\",\n    \"mobile\":\"7807807\",\n    \"countryCode\":\"IND\",\n    \"oneSignalId\":\"12343243242344\",\n    \"osversion\":\"Playground\",\n    \"devicemodel\":\"Web\"\n  }\n}"
							}
						},
						"url": {
							"raw": "{{auth-server-gql}}",
							"host": [
								"{{auth-server-gql}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reesha Login [GQL]",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation ReeshaLogin($input: ReeshaLoginInputDto!){\n  reeshaLogin(input:$input) {\n    success\n    message {\n      ar\n    }\n    accessToken\n    refreshToken\n  }\n}",
								"variables": "{\n  \"input\": {\n    \"email\":\"user@reesha.com\",\n    \"password\":\"pass\"\n  }\n}"
							}
						},
						"url": {
							"raw": "{{auth-server-gql}}",
							"host": [
								"{{auth-server-gql}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign Reesha Roles [GQL]",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation AssignReeshaRole($input: ReeshaAssignRolesInputDto!){\n  assignReeshaRoles(input:$input) {\n    success\n    message {\n      ar\n    }\n  }\n}",
								"variables": "{\n  \"input\": {\n    \"reeshaId\":\"603622c249e0d13bae24f331\",\n    \"appType\":\"REESHA\"\n  }\n}"
							}
						},
						"url": {
							"raw": "{{auth-server-gql}}",
							"host": [
								"{{auth-server-gql}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "roles:get",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjNhMzhlMWRhZjAyODQyODFlNDU1MTIiLCJzZXNzaW9uSWQiOiI1ZjNhMzk2MWZiZGJkYWNlNWI1N2FkNDQiLCJhcHBUeXBlIjoiVVNFUiIsImRldmljZVR5cGUiOiJJT1MiLCJyb2xlcyI6W10sImlhdCI6MTU5NzY1MTI5NywiZXhwIjoxNTk3NjUyMTk3fQ.MEUCIQC9ev4xo3R55mC1jYVqEG44wmcYrOIqVNKpYmOdhp0ltQIgTE05WeRepY9zkQ-pOLCwJtv71dpln3WF7zLPINmroN4",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}roles",
					"host": [
						"{{baseUrl}}roles"
					]
				}
			},
			"response": []
		},
		{
			"name": "roles:create",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjNhMzhlMWRhZjAyODQyODFlNDU1MTIiLCJzZXNzaW9uSWQiOiI1ZjNhMzk2MWZiZGJkYWNlNWI1N2FkNDQiLCJhcHBUeXBlIjoiVVNFUiIsImRldmljZVR5cGUiOiJJT1MiLCJyb2xlcyI6W10sImlhdCI6MTU5NzY1MTI5NywiZXhwIjoxNTk3NjUyMTk3fQ.MEUCIQC9ev4xo3R55mC1jYVqEG44wmcYrOIqVNKpYmOdhp0ltQIgTE05WeRepY9zkQ-pOLCwJtv71dpln3WF7zLPINmroN4",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "\"USER\"",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}roles/create",
					"host": [
						"{{baseUrl}}roles"
					],
					"path": [
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "roles:update",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjNhMzhlMWRhZjAyODQyODFlNDU1MTIiLCJzZXNzaW9uSWQiOiI1ZjNhMzk2MWZiZGJkYWNlNWI1N2FkNDQiLCJhcHBUeXBlIjoiVVNFUiIsImRldmljZVR5cGUiOiJJT1MiLCJyb2xlcyI6W10sImlhdCI6MTU5NzY1MTI5NywiZXhwIjoxNTk3NjUyMTk3fQ.MEUCIQC9ev4xo3R55mC1jYVqEG44wmcYrOIqVNKpYmOdhp0ltQIgTE05WeRepY9zkQ-pOLCwJtv71dpln3WF7zLPINmroN4",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "newName",
							"value": "\"REESHA\"",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}roles/update/5f3a39d7daf0284281e45513",
					"host": [
						"{{baseUrl}}roles"
					],
					"path": [
						"update",
						"5f3a39d7daf0284281e45513"
					]
				}
			},
			"response": []
		},
		{
			"name": "roles:delete",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjNhMzhlMWRhZjAyODQyODFlNDU1MTIiLCJzZXNzaW9uSWQiOiI1ZjNhMzk2MWZiZGJkYWNlNWI1N2FkNDQiLCJhcHBUeXBlIjoiVVNFUiIsImRldmljZVR5cGUiOiJJT1MiLCJyb2xlcyI6W10sImlhdCI6MTU5NzY1MTI5NywiZXhwIjoxNTk3NjUyMTk3fQ.MEUCIQC9ev4xo3R55mC1jYVqEG44wmcYrOIqVNKpYmOdhp0ltQIgTE05WeRepY9zkQ-pOLCwJtv71dpln3WF7zLPINmroN4",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "newName",
							"value": "\"REESHA\"",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}roles/delete/5f3a39d7daf0284281e45513",
					"host": [
						"{{baseUrl}}roles"
					],
					"path": [
						"delete",
						"5f3a39d7daf0284281e45513"
					]
				}
			},
			"response": []
		},
		{
			"name": "roles:getbyId",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjNhMzhlMWRhZjAyODQyODFlNDU1MTIiLCJzZXNzaW9uSWQiOiI1ZjNhMzk2MWZiZGJkYWNlNWI1N2FkNDQiLCJhcHBUeXBlIjoiVVNFUiIsImRldmljZVR5cGUiOiJJT1MiLCJyb2xlcyI6W10sImlhdCI6MTU5NzY1MTI5NywiZXhwIjoxNTk3NjUyMTk3fQ.MEUCIQC9ev4xo3R55mC1jYVqEG44wmcYrOIqVNKpYmOdhp0ltQIgTE05WeRepY9zkQ-pOLCwJtv71dpln3WF7zLPINmroN4",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "{{baseUrl}}roles/5f3a39d7daf0284281e45513",
					"host": [
						"{{baseUrl}}roles"
					],
					"path": [
						"5f3a39d7daf0284281e45513"
					]
				}
			},
			"response": []
		},
		{
			"name": "Roles Mappers: Get All",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjMyODc4NGY3Y2I2MzIxMGY2ZWM2ZDciLCJzZXNzaW9uSWQiOiI1ZjMyODc4NWU0OGYwYjg5OTc4ZWI4ZTQiLCJhcHBUeXBlIjoiVVNFUiIsImRldmljZVR5cGUiOiJJT1MiLCJyb2xlcyI6W10sImlhdCI6MTU5NzY1MjExNSwiZXhwIjoxNTk3NjUzMDE1fQ.MEQCIH5BrwvD1EgXzQ8lX1tn2qO-U30FalyEvcZQ4ws8vDFjAiBtSzT7nnAKqDbROZ_7YdVkpIKWRu2yto5Hu3V9kaM0RQ",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}roles-mapper/",
					"host": [
						"{{baseUrl}}roles-mapper"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Roles Mappers: Create",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjMyODc4NGY3Y2I2MzIxMGY2ZWM2ZDciLCJzZXNzaW9uSWQiOiI1ZjMyODc4NWU0OGYwYjg5OTc4ZWI4ZTQiLCJhcHBUeXBlIjoiVVNFUiIsImRldmljZVR5cGUiOiJJT1MiLCJyb2xlcyI6W10sImlhdCI6MTU5NzY1MjExNSwiZXhwIjoxNTk3NjUzMDE1fQ.MEQCIH5BrwvD1EgXzQ8lX1tn2qO-U30FalyEvcZQ4ws8vDFjAiBtSzT7nnAKqDbROZ_7YdVkpIKWRu2yto5Hu3V9kaM0RQ",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"appType\":\"USER\",\n    \"roles\":[\"5efcd832fdb4108a090e29cb\"]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}roles-mapper/create",
					"host": [
						"{{baseUrl}}roles-mapper"
					],
					"path": [
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Roles Mappers: Delete",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjMyODc4NGY3Y2I2MzIxMGY2ZWM2ZDciLCJzZXNzaW9uSWQiOiI1ZjMyODc4NWU0OGYwYjg5OTc4ZWI4ZTQiLCJhcHBUeXBlIjoiVVNFUiIsImRldmljZVR5cGUiOiJJT1MiLCJyb2xlcyI6W10sImlhdCI6MTU5NzY1MjExNSwiZXhwIjoxNTk3NjUzMDE1fQ.MEQCIH5BrwvD1EgXzQ8lX1tn2qO-U30FalyEvcZQ4ws8vDFjAiBtSzT7nnAKqDbROZ_7YdVkpIKWRu2yto5Hu3V9kaM0RQ",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}roles-mapper/delete/5f08343ed5c40018c3aefaba",
					"host": [
						"{{baseUrl}}roles-mapper"
					],
					"path": [
						"delete",
						"5f08343ed5c40018c3aefaba"
					]
				}
			},
			"response": []
		},
		{
			"name": "Roles Mappers: Update",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjMyODc4NGY3Y2I2MzIxMGY2ZWM2ZDciLCJzZXNzaW9uSWQiOiI1ZjMyODc4NWU0OGYwYjg5OTc4ZWI4ZTQiLCJhcHBUeXBlIjoiVVNFUiIsImRldmljZVR5cGUiOiJJT1MiLCJyb2xlcyI6W10sImlhdCI6MTU5NzY1MjExNSwiZXhwIjoxNTk3NjUzMDE1fQ.MEQCIH5BrwvD1EgXzQ8lX1tn2qO-U30FalyEvcZQ4ws8vDFjAiBtSzT7nnAKqDbROZ_7YdVkpIKWRu2yto5Hu3V9kaM0RQ",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"appType\":\"userApp\",\n\"roles\":[\"5efcd832fdb4108a090e29cb\"]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}roles-mapper/update/5f08343ed5c40018c3aefaba",
					"host": [
						"{{baseUrl}}roles-mapper"
					],
					"path": [
						"update",
						"5f08343ed5c40018c3aefaba"
					]
				}
			},
			"response": []
		},
		{
			"name": "Roles for App Type",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjMyODc4NGY3Y2I2MzIxMGY2ZWM2ZDciLCJzZXNzaW9uSWQiOiI1ZjMyODc4NWU0OGYwYjg5OTc4ZWI4ZTQiLCJhcHBUeXBlIjoiVVNFUiIsImRldmljZVR5cGUiOiJJT1MiLCJyb2xlcyI6W10sImlhdCI6MTU5NzY1MjExNSwiZXhwIjoxNTk3NjUzMDE1fQ.MEQCIH5BrwvD1EgXzQ8lX1tn2qO-U30FalyEvcZQ4ws8vDFjAiBtSzT7nnAKqDbROZ_7YdVkpIKWRu2yto5Hu3V9kaM0RQ",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}roles-mapper/roles-for-app?appType=userApp",
					"host": [
						"{{baseUrl}}roles-mapper"
					],
					"path": [
						"roles-for-app"
					],
					"query": [
						{
							"key": "appType",
							"value": "userApp"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ReeshaCreateTag",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation reeshaCreateTag($tagInput: TagCreateInputDto!){\n  reeshaCreateTag(tagInput:$tagInput) {\n    id\n    name{en\n    ar}\n    tagType\n    isDeleted\n  }\n}",
						"variables": "{\n    \"tagInput\": {\n        \"name\": {\n            \"en\": \"aa111\",\n            \"ar\": \"ar111\"\n        },\n        \"tagType\": \"STORE\",\n        \"isDeleted\": true\n    }\n}"
					}
				},
				"url": {
					"raw": "{{main-server-gql}}",
					"host": [
						"{{main-server-gql}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ReeshaEditTag",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation reeshaEditTag($tagUpdateInput: TagUpdateInputDto!){\n  reeshaEditTag(tagUpdateInput:$tagUpdateInput) {\n    id\n    name{en\n    ar}\n    tagType\n    isDeleted\n  }\n}",
						"variables": "{\n    \"tagUpdateInput\": {\n        \"tagId\": \"5fe606301074ec6ede9c6e49\",\n        \"name\": {\n            \"en\": \"ab\",\n            \"ar\": \"ar\"\n        },\n        \"tagType\": \"STORE\",\n        \"isDeleted\": true\n    }\n}"
					}
				},
				"url": {
					"raw": "{{main-server-gql}}",
					"host": [
						"{{main-server-gql}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "reeshaDeleteTag",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation reeshaDeleteTag($tagId: String!){\n  reeshaDeleteTag(tagId:$tagId) {\n    status\n  }\n}",
						"variables": "{\n    \"tagId\":\"5fe609d11074ec6ede9c6e4e\"\n}"
					}
				},
				"url": {
					"raw": "{{main-server-gql}}",
					"host": [
						"{{main-server-gql}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "reeshaGetTags",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query reeshaGetTags($tagIds: [String!]){\n  reeshaGetTags(tagIds:$tagIds) {\n    id\n    name{en\n    ar}\n    tagType\n    isDeleted\n  }\n}",
						"variables": "{\n    \"tagIds\":[\"5fe609d11074ec6ede9c6e4e\"]\n}"
					}
				},
				"url": {
					"raw": "{{main-server-gql}}",
					"host": [
						"{{main-server-gql}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "createOrderCancelReason",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation createOrderCancelReason($orderCancelReasonCreateInputDto: OrderCancelReasonCreateInputDto!){\n  createOrderCancelReason(orderCancelReasonCreateInputDto:$orderCancelReasonCreateInputDto) {\n    _id\n    reason{en\n    ar}\n    appType\n  }\n}",
						"variables": "{\n    \"orderCancelReasonCreateInputDto\": {\n        \"reason\": {\n            \"en\": \"en1\",\n            \"ar\": \"ar1\"\n        },\n        \"appType\": \"DRIVER\"\n    }\n}"
					}
				},
				"url": {
					"raw": "{{main-server-gql}}",
					"host": [
						"{{main-server-gql}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "EditOrderCancelReason",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation editOrderCancelReason($orderCancelReasonEditInputDto: OrderCancelReasonEditInputDto!){\n  editOrderCancelReason(orderCancelReasonEditInputDto:$orderCancelReasonEditInputDto) {\n    success\n    message{\n        en \n        ar\n    }\n  }\n}\n\n",
						"variables": "{\n    \"orderCancelReasonEditInputDto\": {\n        \"_id\":\"5ff313608364773d8daf491a\",\n        \"reason\": {\n            \"en\": \"en2\",\n            \"ar\": \"ar2\"\n        },\n        \"appType\": \"USER\"\n    }\n}"
					}
				},
				"url": {
					"raw": "{{main-server-gql}}",
					"host": [
						"{{main-server-gql}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteOrderCancelReason",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation deleteOrderCancelReason($orderCancelReasonId: String!){\n  deleteOrderCancelReason(orderCancelReasonId:$orderCancelReasonId) {\n    success\n    message{\n        en \n        ar\n    }\n  }\n}\n\n",
						"variables": "{\n    \"orderCancelReasonId\": \n\"5ff313608364773d8daf491a\"\n    \n}"
					}
				},
				"url": {
					"raw": "{{main-server-gql}}",
					"host": [
						"{{main-server-gql}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Rule [Rest Api]",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"ruleName\": \"rule-one\",\n    \"ruleObject\": {\n        \"ifElseList\": [\n            {\n                \"match\": {\n                    \"operator\": \"Equals\",\n                    \"operandOne\": true,\n                    \"operandTwo\": true\n                },\n                \"thenValue\": 180\n            }\n        ]\n    },\n    \"isEnabled\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{auth-server}}/rule-management/create-rule",
					"host": [
						"{{auth-server}}"
					],
					"path": [
						"rule-management",
						"create-rule"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Rule [Rest API]",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"ruleName\": \"rule-one\",\n    \"ruleObject\": {\n        \"ifElseList\": [\n            {\n                \"match\": {\n                    \"operator\": \"Equals\",\n                    \"operandOne\":  {\n                    \"operator\": \"Equals\",\n                    \"operandOne\": \"__countryCode\",\n                    \"operandTwo\": \"+91\"\n                },\n                    \"operandTwo\": \"+91\"\n                },\n                \"thenValue\": 180\n            },\n            {\n                \"match\": {\n                    \"operator\": \"Equals\",\n                    \"operandOne\": \"__countryCode\",\n                    \"operandTwo\": \"+974\"\n                },\n                \"thenValue\": 600\n            }\n        ]\n    },\n    \"isEnabled\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{auth-server}}/rule-management/update-rule",
					"host": [
						"{{auth-server}}"
					],
					"path": [
						"rule-management",
						"update-rule"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Rules [Rest Api]",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{auth-server}}/rule-management/all-rules",
					"host": [
						"{{auth-server}}"
					],
					"path": [
						"rule-management",
						"all-rules"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Rule [Rest API]",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{auth-server}}/rule-management/rule/<your rule name here>",
					"host": [
						"{{auth-server}}"
					],
					"path": [
						"rule-management",
						"rule",
						"<your rule name here>"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single Rule [Rest API]",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{auth-server}}/rule-management/rule/<your rule name here>",
					"host": [
						"{{auth-server}}"
					],
					"path": [
						"rule-management",
						"rule",
						"<your rule name here>"
					]
				}
			},
			"response": []
		}
	]
}